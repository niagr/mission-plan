version: 2
jobs:
  build:
    docker: # use the docker executor type; machine and macos executors are also supported
      - image: circleci/python:3.6-stretch-browsers # the primary container, where your job's commands are run
    steps:
      - checkout # check out the code in the project directory
      - run:
          name: Install Node
          command: |
            pushd /tmp
            wget https://nodejs.org/download/release/v8.11.3/node-v8.11.3-linux-x64.tar.gz
            tar -xf node-v8.11.3-linux-x64.tar.gz
            sudo cp -r node-v8.11.3-linux-x64 /opt/
            sudo ln -sf /opt/node-v8.11.3-linux-x64/bin/node /usr/local/bin/
            sudo ln -sf /opt/node-v8.11.3-linux-x64/bin/npm /usr/local/bin/
            node --version
            npm --version
            popd
      - run:
          name: Build Frontend
          command: |
            cd frontend
            npm install
            npm run build
  deploy:
    docker: # use the docker executor type; machine and macos executors are also supported
      - image: circleci/python:3.6-stretch-browsers # the primary container, where your job's commands are run
    steps:
      - run:
          name: Deploy to S3
          command: |
            sudo pip install awscli
            aws s3 sync frontend/dist/ s3://mission-plan-dev
            # gzip bundle and upload to S3 without the .gz extension, with content-encoding 'gzip'
            # we work with wildcards so as to not interfere with hashes used for cache busting
            gzip frontend/dist/bundle*.js
            BUNDLE_FILENAME=$(basename $(ls frontend/dist/bundle*.js.gz))
            aws s3 cp --content-encoding gzip frontend/dist/$BUNDLE_FILENAME s3://mission-plan-dev/$(basename $BUNDLE_FILENAME .gz)
      - run:
          name: Deploy to Beanstalk
          command: |
            BEANSTALK_ZIP_S3_BUCKET=mission-plan-backend-beanstalk-bundles
            BEANSTALK_REGION=us-east-2
            BEANSTALK_APPLICATION_NAME=MissionPlan
            BEANSTALK_ENV_NAME=MissionPlanDev
            git archive --format zip master:backend > /tmp/mission-plan-backend.zip
            aws s3 cp /tmp/mission-plan-backend.zip s3://$BEANSTALK_ZIP_S3_BUCKET/
            aws elasticbeanstalk create-application-version --region $BEANSTALK_REGION --application-name $BEANSTALK_APPLICATION_NAME --version-label mission-plan-backend-circle-ci-$CIRCLE_BUILD_NUM --source-bundle S3Bucket="$BEANSTALK_ZIP_S3_BUCKET",S3Key="mission-plan-backend.zip"
            aws elasticbeanstalk update-environment --region $BEANSTALK_REGION --application-name $BEANSTALK_APPLICATION_NAME --environment-name $BEANSTALK_ENV_NAME --version-label mission-plan-backend-circle-ci-$CIRCLE_BUILD_NUM
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy

